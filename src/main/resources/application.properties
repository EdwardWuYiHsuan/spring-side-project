# ===============================
# = DATA SOURCE
# Set here configurations for the database connection
# ===============================
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/edward_spring_test?useSSL=false&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=my-secret-pw

# ===============================
# = JPA / HIBERNATE
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is stripped before adding them to the entity manager).
# ===============================

# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Hibernate ddl auto (create, create-drop, update, validate, none): with "update" the database schema will be automatically updated according to java entities found in the project
spring.jpa.hibernate.ddl-auto=none

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# Setting the JDBC Timezone as UTC
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Whether uses JDBC metadata for JPA
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Auto create DDL based on JPA meta on every SpringBoot startup. if you need to create DDL then set up 'scripts.action' as "drop-and-create" otherwise please set up "none".
# The Script action :
# > none : does not generate any DDL commands
# > validate: validate the schema, makes no changes to the database.
# > create : generates only database create commands
# > update : database Scheme Auto Update (seem to not update all)
# > drop : generates only database drop commands
# > drop-and-create : generates database drop commands followed by create commands
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=none
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/db/jpa/create.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=src/main/resources/db/jpa/drop.sql

# ===============================
# = RabbitMQ
# ===============================
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
#jsa.rabbitmq.exchange=jsa.fanout

# ==== RabbitMQ: ITE with SSL (AMQPS) ====
#spring.rabbitmq.host=b-02b2cae7-863b-4292-a74c-74ab2cfd1a98.mq.ap-northeast-1.amazonaws.com
#spring.rabbitmq.port=5671
#spring.rabbitmq.username=p9mrjsqXXRNp4YrB
#spring.rabbitmq.password=qLN9q4GNs4fzzTpp
#rabbit.ssl=TLSv1.2
#rabbit.keystore.name=client_key.p12
#rabbit.keystore.password=rabbitstore
#rabbit.truststore=server_store.jks
#rabbit.truststore.password=rabbitstore

# ==================================
# = Servers: client call third party
# ==================================
server.mock.url=http://localhost:3001
server.mock.admin-token=ebca72b748724e299d0b661eff422f5b

# ===============================
# = Spring API Doc with Swagger
# ===============================
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.defaultModelsExpandDepth=-1

# ===============================
# = Actuator
# ===============================
management.endpoints.web.exposure.include=health,env,prometheus
management.endpoint.health.show-details=always
